using RustAnalyzer.src.Hooks.Interfaces;

namespace RustAnalyzer.src.Hooks.Providers
{
    public class HooksLastProvider : BaseJsonHooksProvider 
    {
        public override string Version => "LastVersion";
        protected override string JsonContent => @"{
  ""hooks"": [
    ""CanAcceptItem(ItemContainer,Item,int)"",
    ""CanAccessVendingMachine(DeliveryDroneConfig,VendingMachine)"",
    ""CanAdministerVending(BasePlayer,NPCVendingMachine)"",
    ""CanAdministerVending(BasePlayer,VendingMachine)"",
    ""CanAffordToPlace(BasePlayer,Planner,Construction)"",
    ""CanAffordUpgrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)"",
    ""CanAssignBed(BasePlayer,SleepingBag,ulong)"",
    ""CanAssignMission(BasePlayer,BaseMission,IMissionProvider)"",
    ""CanBeAwardedAdventGift(AdventCalendar,BasePlayer)"",
    ""CanBeHomingTargeted(AttackHeliPilotFlare)"",
    ""CanBeHomingTargeted(BaseHelicopter)"",
    ""CanBeHomingTargeted(CH47Helicopter)"",
    ""CanBeHomingTargeted(PatrolHelicopter)"",
    ""CanBeHomingTargeted(PlayerHelicopter)"",
    ""CanBeHomingTargeted(RoadFlare)"",
    ""CanBeRecycled(Item,Recycler)"",
    ""CanBeTargeted(BaseCombatEntity,AutoTurret)"",
    ""CanBeTargeted(BaseCombatEntity,HelicopterTurret)"",
    ""CanBeTargeted(BasePlayer,FlameTurret)"",
    ""CanBeTargeted(BasePlayer,GunTrap)"",
    ""CanBeWounded(BasePlayer,HitInfo)"",
    ""CanBradleyApcTarget(BradleyAPC,BaseEntity)"",
    ""CanBuild(Planner,Construction,Construction.Target)"",
    ""CanBypassQueue(Network.Connection)"",
    ""CanCastFishingRod(BasePlayer,BaseFishingRod,Item,UnityEngine.Vector3)"",
    ""CanCatchFish(BasePlayer,BaseFishingRod,Item)"",
    ""CanChangeCode(BasePlayer,CodeLock,string,bool)"",
    ""CanChangeGrade(BasePlayer,BuildingBlock,BuildingGrade.Enum,ulong)"",
    ""CanCheckFuel(EntityFuelSystem,StorageContainer,BasePlayer)"",
    ""CanClientLogin(Network.Connection)"",
    ""CanCombineDroppedItem(DroppedItem,DroppedItem)"",
    ""CanCraft(ItemCrafter,ItemBlueprint,int,bool)"",
    ""CanCraft(PlayerBlueprints,ItemDefinition,int)"",
    ""CanCreateWorldProjectile(HitInfo,ItemDefinition)"",
    ""CanDemolish(BasePlayer,StabilityEntity)"",
    ""CanDeployItem(BasePlayer,Deployer,NetworkableId)"",
    ""CanDeployScientists(BradleyAPC,BaseEntity,System.Collections.Generic.List<GameObjectRef>,System.Collections.Generic.List<UnityEngine.Vector3>)"",
    ""CanDesignFirework(BasePlayer,PatternFirework)"",
    ""CanDestroyLock(BasePlayer,ModularCar,BaseVehicleModule)"",
    ""CanDismountEntity(BasePlayer,BaseMountable)"",
    ""CanDropActiveItem(BasePlayer)"",
    ""CanElevatorLiftMove(ElevatorLift)"",
    ""CanEntityBeHostile(BaseCombatEntity)"",
    ""CanEntityBeHostile(BasePlayer)"",
    ""CanEquipItem(PlayerInventory,Item,int)"",
    ""CanExplosiveStick(TimedExplosive,BaseEntity)"",
    ""CanFastTrackCraftTask(ItemCrafter,ItemCraftTask,int)"",
    ""CanFireLiquidWeapon(BasePlayer,LiquidWeapon)"",
    ""CanHackCrate(BasePlayer,HackableLockedCrate)"",
    ""CanHelicopterDropCrate(CH47HelicopterAIController)"",
    ""CanHelicopterStrafe(PatrolHelicopterAI)"",
    ""CanHelicopterStrafeTarget(PatrolHelicopterAI,BasePlayer)"",
    ""CanHelicopterTarget(PatrolHelicopterAI,BasePlayer)"",
    ""CanHelicopterUseNapalm(PatrolHelicopterAI)"",
    ""CanHideStash(BasePlayer,StashContainer)"",
    ""CanLock(BasePlayer,CodeLock)"",
    ""CanLock(BasePlayer,KeyLock)"",
    ""CanLock(BasePlayer,ModularCar,ModularCarCodeLock)"",
    ""CanLockerAcceptItem(Locker,Item,int)"",
    ""CanLootEntity(BasePlayer,BaseRidableAnimal)"",
    ""CanLootEntity(BasePlayer,ContainerIOEntity)"",
    ""CanLootEntity(BasePlayer,DroppedItemContainer)"",
    ""CanLootEntity(BasePlayer,IndustrialCrafter)"",
    ""CanLootEntity(BasePlayer,LootableCorpse)"",
    ""CanLootEntity(BasePlayer,ResourceContainer)"",
    ""CanLootEntity(BasePlayer,StorageContainer)"",
    ""CanLootEntity(BasePlayer,WorldItem)"",
    ""CanLootPlayer(BasePlayer,BasePlayer)"",
    ""CanMountEntity(BasePlayer,BaseMountable)"",
    ""CanMoveItem(Item,PlayerInventory,ItemContainerId,int,int,ItemMoveModifier)"",
    ""CanNetworkTo(BaseNetworkable,BasePlayer)"",
    ""CanNetworkTo(BasePlayer,BasePlayer)"",
    ""CanNpcEat(BaseNpc,BaseEntity)"",
    ""CanPickupEntity(BasePlayer,BaseCombatEntity)"",
    ""CanPickupEntity(BasePlayer,DoorCloser)"",
    ""CanPickupLock(BasePlayer,BaseLock)"",
    ""CanPurchaseItem(BasePlayer,Item,System.Action<BasePlayer, Item>,VendingMachine,ItemContainer)"",
    ""CanReceiveCall(PhoneController)"",
    ""CanRecycle(Recycler,Item)"",
    ""CanRenameBed(BasePlayer,SleepingBag,string)"",
    ""CanResearchItem(BasePlayer,Item)"",
    ""CanSamSiteShoot(SamSite)"",
    ""CanSeeStash(BasePlayer,StashContainer)"",
    ""CanSetBedPublic(BasePlayer,SleepingBag)"",
    ""CanSetRelationship(BasePlayer,BasePlayer,RelationshipManager.RelationshipType,int)"",
    ""CanSpectateTarget(BasePlayer,string)"",
    ""CanStackItem(Item,Item)"",
    ""CanSwapToSeat(BasePlayer,BaseMountable)"",
    ""CanSwapToSeat(BasePlayer,ModularCarSeat)"",
    ""CanTakeCutting(BasePlayer,GrowableEntity)"",
    ""CanTrainCarCouple(TrainCar,TrainCar)"",
    ""CanUnlock(BasePlayer,CodeLock)"",
    ""CanUnlock(BasePlayer,KeyLock)"",
    ""CanUnlock(BasePlayer,ModularCarCodeLock,string)"",
    ""CanUnlockTechTreeNode(BasePlayer,TechTreeData.NodeInstance,TechTreeData)"",
    ""CanUnlockTechTreeNodePath(BasePlayer,TechTreeData.NodeInstance,TechTreeData)"",
    ""CanUpdateSign(BasePlayer,CarvablePumpkin)"",
    ""CanUpdateSign(BasePlayer,PhotoFrame)"",
    ""CanUpdateSign(BasePlayer,Signage)"",
    ""CanUseFuel(EntityFuelSystem,StorageContainer,float,float)"",
    ""CanUseGesture(BasePlayer,GestureConfig)"",
    ""CanUseHBHFSensor(BasePlayer,HBHFSensor)"",
    ""CanUseHelicopter(BasePlayer,CH47HelicopterAIController)"",
    ""CanUseLockedEntity(BasePlayer,CodeLock)"",
    ""CanUseLockedEntity(BasePlayer,KeyLock)"",
    ""CanUseMailbox(BasePlayer,Mailbox)"",
    ""CanUseUI(BasePlayer,string)"",
    ""CanUseVending(BasePlayer,VendingMachine)"",
    ""CanUseWires(BasePlayer)"",
    ""CanUserLogin(string,string,string)"",
    ""CanVendingAcceptItem(VendingMachine,Item,int)"",
    ""CanWaterBallSplash(ItemDefinition,UnityEngine.Vector3,float,int)"",
    ""CanWearItem(PlayerInventory,Item,int)"",
    ""ICanPickupEntity(BasePlayer,DoorCloser)"",
    ""IOnBaseCombatEntityHurt(BaseCombatEntity,HitInfo)"",
    ""IOnBasePlayerAttacked(BasePlayer,HitInfo)"",
    ""IOnBasePlayerHurt(BasePlayer,HitInfo)"",
    ""IOnCupboardAuthorize(ulong,BasePlayer,BuildingPrivlidge)"",
    ""IOnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)"",
    ""IOnLoseCondition(Item,float)"",
    ""IOnNpcTarget(BaseNpc,BaseEntity)"",
    ""IOnPlayerBanned(Network.Connection,AuthResponse)"",
    ""IOnPlayerChat(ulong,string,string,ConVar.Chat.ChatChannel,BasePlayer)"",
    ""IOnPlayerConnected(BasePlayer)"",
    ""IOnRconInitialize()"",
    ""IOnRunCommandLine()"",
    ""IOnServerCommand(ConsoleSystem.Arg)"",
    ""IOnServerInitialized()"",
    ""IOnServerShutdown()"",
    ""IOnUserApprove(Network.Connection)"",
    ""Init()"",
    ""InitLogging()"",
    ""Loaded()"",
    ""OnAIBrainStateSwitch(BaseAIBrain,BaseAIBrain.BasicAIState,BaseAIBrain.BasicAIState)"",
    ""OnAIBrainStateSwitched(BaseAIBrain,BaseAIBrain.BasicAIState)"",
    ""OnActiveItemChange(BasePlayer,Item,ItemId)"",
    ""OnActiveItemChanged(BasePlayer,Item,Item)"",
    ""OnAddVendingOffer(VendingMachine,ProtoBuf.VendingMachine.SellOrder)"",
    ""OnAdventGiftAward(AdventCalendar,BasePlayer)"",
    ""OnAdventGiftAwarded(AdventCalendar,BasePlayer)"",
    ""OnAirdrop(CargoPlane,UnityEngine.Vector3)"",
    ""OnAmmoSwitch(BaseProjectile,BasePlayer,ItemDefinition)"",
    ""OnAmmoUnload(BaseProjectile,Item,BasePlayer)"",
    ""OnAnalysisComplete(SurveyCrater,BasePlayer)"",
    ""OnApplicationCommand(BasePlayer,string,string[])"",
    ""OnApplicationCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])"",
    ""OnArcadeScoreAdded(BaseArcadeMachine,BasePlayer,int)"",
    ""OnBackpackDrop(Item,PlayerInventory)"",
    ""OnBedMade(SleepingBag,BasePlayer)"",
    ""OnBigWheelLoss(BigWheelGame,Item,BigWheelBettingTerminal)"",
    ""OnBigWheelWin(BigWheelGame,Item,BigWheelBettingTerminal,int)"",
    ""OnBoatPathGenerate()"",
    ""OnBonusItemDrop(Item,BasePlayer)"",
    ""OnBonusItemDropped(Item,BasePlayer)"",
    ""OnBookmarkAdd(ComputerStation,BasePlayer,string)"",
    ""OnBookmarkControl(ComputerStation,BasePlayer,string,IRemoteControllable)"",
    ""OnBookmarkControlEnd(ComputerStation,BasePlayer,BaseEntity)"",
    ""OnBookmarkControlEnded(ComputerStation,BasePlayer,BaseEntity)"",
    ""OnBookmarkControlEnded(ComputerStation,BasePlayer,IRemoteControllable)"",
    ""OnBookmarkControlStarted(ComputerStation,BasePlayer,string,IRemoteControllable)"",
    ""OnBookmarkDelete(ComputerStation,BasePlayer,string)"",
    ""OnBookmarkInput(ComputerStation,BasePlayer,InputState)"",
    ""OnBookmarksSendControl(ComputerStation,BasePlayer,string)"",
    ""OnBoomboxStationUpdate(BoomBox,string,BasePlayer)"",
    ""OnBoomboxStationUpdated(BoomBox,string,BasePlayer)"",
    ""OnBoomboxStationValidate(string)"",
    ""OnBoomboxToggle(BoomBox,BasePlayer,bool)"",
    ""OnBradleyApcHunt(BradleyAPC)"",
    ""OnBradleyApcInitialize(BradleyAPC)"",
    ""OnBradleyApcPatrol(BradleyAPC)"",
    ""OnBradleyApcThink(BradleyAPC)"",
    ""OnBroadcastCommand(string,object[])"",
    ""OnBuildingMerge(ServerBuildingManager,BuildingManager.Building,BuildingManager.Building)"",
    ""OnBuildingPrivilege(BaseEntity,OBB)"",
    ""OnBuildingSplit(BuildingManager.Building,uint)"",
    ""OnButtonPress(PressButton,BasePlayer)"",
    ""OnBuyVendingItem(VendingMachine,BasePlayer,int,int)"",
    ""OnCCTVDirectionChange(CCTV_RC,BasePlayer)"",
    ""OnCardSwipe(CardReader,Keycard,BasePlayer)"",
    ""OnCargoPlaneSignaled(BaseEntity,SupplySignal)"",
    ""OnCargoShipEgress(CargoShip)"",
    ""OnCargoShipHarborApproach(CargoShip,CargoNotifier)"",
    ""OnCargoShipHarborArrived(CargoShip)"",
    ""OnCargoShipHarborLeave(CargoShip)"",
    ""OnCargoShipSpawnCrate(CargoShip)"",
    ""OnClanMemberAdded(long,ulong)"",
    ""OnClientAuth(Network.Connection)"",
    ""OnClientCommand(Network.Connection,string)"",
    ""OnClientDisconnect(Network.Connection,string)"",
    ""OnClientDisconnected(Network.Connection,string)"",
    ""OnClientProjectileEffectCreate(Network.Connection,BaseProjectile,string)"",
    ""OnClothingItemChanged(PlayerInventory,Item,bool)"",
    ""OnCoalingTowerGather(CoalingTower,Item)"",
    ""OnCoalingTowerStart(CoalingTower,BasePlayer)"",
    ""OnCodeChange(ModularCar,BasePlayer,string)"",
    ""OnCodeChanged(BasePlayer,CodeLock,string,bool)"",
    ""OnCodeEntered(CodeLock,BasePlayer,string)"",
    ""OnCollectiblePickedup(CollectibleEntity,BasePlayer,Item)"",
    ""OnCollectiblePickup(CollectibleEntity,BasePlayer,bool)"",
    ""OnComposterUpdate(Composter)"",
    ""OnConnectionDequeue(Network.Connection)"",
    ""OnConnectionQueue(Network.Connection)"",
    ""OnConstructionPlace(BaseEntity,Construction,Construction.Target,BasePlayer)"",
    ""OnContainerDropItems(ItemContainer)"",
    ""OnConveyorFiltersChange(IndustrialConveyor,BasePlayer,ProtoBuf.IndustrialConveyor.ItemFilterList)"",
    ""OnCorpsePopulate(NPCPlayer,NPCPlayerCorpse)"",
    ""OnCounterModeToggle(PowerCounter,BasePlayer,bool)"",
    ""OnCounterTargetChange(PowerCounter,BasePlayer,int)"",
    ""OnCrateDropped(HackableLockedCrate)"",
    ""OnCrateHack(HackableLockedCrate)"",
    ""OnCrateHackEnd(HackableLockedCrate)"",
    ""OnCrateLanded(HackableLockedCrate)"",
    ""OnCrateLaptopAttack(HackableLockedCrate,HitInfo)"",
    ""OnCupboardAssign(BuildingPrivlidge,ulong,BasePlayer)"",
    ""OnCupboardAuthorize(BuildingPrivlidge,BasePlayer)"",
    ""OnCupboardAuthorize(VehiclePrivilege,BasePlayer)"",
    ""OnCupboardClearList(BuildingPrivlidge,BasePlayer)"",
    ""OnCupboardClearList(VehiclePrivilege,BasePlayer)"",
    ""OnCupboardDeauthorize(BuildingPrivlidge,BasePlayer)"",
    ""OnCupboardDeauthorize(VehiclePrivilege,BasePlayer)"",
    ""OnCupboardProtectionCalculated(BuildingPrivlidge,float)"",
    ""OnDebrisSpawn(DecayEntity,UnityEngine.Vector3,UnityEngine.Quaternion,bool)"",
    ""OnDecayDamage(DecayEntity)"",
    ""OnDecayHeal(DecayEntity)"",
    ""OnDefaultItemsReceive(PlayerInventory)"",
    ""OnDefaultItemsReceived(PlayerInventory)"",
    ""OnDeleteVendingOffer(VendingMachine,int)"",
    ""OnDemoRecordingStart(string,BasePlayer)"",
    ""OnDemoRecordingStarted(string,BasePlayer)"",
    ""OnDemoRecordingStop(string,BasePlayer)"",
    ""OnDemoRecordingStopped(string,BasePlayer)"",
    ""OnDestroyUI(BasePlayer,string)"",
    ""OnDieselEngineToggle(DieselEngine,BasePlayer)"",
    ""OnDieselEngineToggled(DieselEngine)"",
    ""OnDigitalClockAlarmsSet(DigitalClock,ProtoBuf.DigitalClockMessage)"",
    ""OnDigitalClockRing(DigitalClock)"",
    ""OnDigitalClockRingStop(DigitalClock)"",
    ""OnDispenserBonus(ResourceDispenser,BasePlayer,Item)"",
    ""OnDispenserBonusReceived(ResourceDispenser,BasePlayer,Item)"",
    ""OnDispenserGather(ResourceDispenser,BasePlayer,Item)"",
    ""OnDispenserGathered(ResourceDispenser,BasePlayer,Item)"",
    ""OnDoorClosed(Door,BasePlayer)"",
    ""OnDoorKnocked(Door,BasePlayer)"",
    ""OnDoorKnocked(DoorKnocker,BasePlayer)"",
    ""OnDoorOpened(Door,BasePlayer)"",
    ""OnDroppedItemCombined(DroppedItem)"",
    ""OnElevatorButtonPress(ElevatorLift,BasePlayer,Elevator.Direction,bool)"",
    ""OnElevatorCall(Elevator,Elevator)"",
    ""OnElevatorMove(Elevator,int)"",
    ""OnEngineLoadoutRefresh(Rust.Modular.EngineStorage)"",
    ""OnEngineStart(MotorRowboat,BasePlayer)"",
    ""OnEngineStarted(MotorRowboat,BasePlayer)"",
    ""OnEngineStatsRefresh(VehicleModuleEngine,Rust.Modular.EngineStorage)"",
    ""OnEngineStatsRefreshed(VehicleModuleEngine,Rust.Modular.EngineStorage)"",
    ""OnEntityActiveCheck(BaseEntity,BasePlayer,uint,string)"",
    ""OnEntityBuilt(Planner,UnityEngine.GameObject)"",
    ""OnEntityControl(AutoTurret,ulong)"",
    ""OnEntityControl(PoweredRemoteControlEntity,ulong)"",
    ""OnEntityControl(RemoteControlEntity,ulong)"",
    ""OnEntityDeath(BaseCombatEntity,HitInfo)"",
    ""OnEntityDeath(ResourceEntity,HitInfo)"",
    ""OnEntityDestroy(BradleyAPC)"",
    ""OnEntityDestroy(CH47HelicopterAIController)"",
    ""OnEntityDismounted(BaseMountable,BasePlayer)"",
    ""OnEntityDistanceCheck(BaseEntity,BasePlayer,uint,string,float,bool)"",
    ""OnEntityEnter(TriggerBase,BaseEntity)"",
    ""OnEntityEnter(TriggerComfort,BaseEntity)"",
    ""OnEntityFlagsNetworkUpdate(BaseEntity)"",
    ""OnEntityFromOwnerCheck(BaseEntity,BasePlayer,uint,string)"",
    ""OnEntityGroundMissing(BaseEntity)"",
    ""OnEntityKill(BaseNetworkable)"",
    ""OnEntityLeave(TriggerBase,BaseEntity)"",
    ""OnEntityLeave(TriggerComfort,BaseEntity)"",
    ""OnEntityLoaded(BaseNetworkable,BaseNetworkable.LoadInfo)"",
    ""OnEntityMarkHostile(BaseCombatEntity,float)"",
    ""OnEntityMarkHostile(BasePlayer,float)"",
    ""OnEntityMounted(BaseMountable,BasePlayer)"",
    ""OnEntityPickedUp(BaseCombatEntity,Item,BasePlayer)"",
    ""OnEntityReskin(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)"",
    ""OnEntityReskinned(BaseEntity,ItemSkinDirectory.Skin,BasePlayer)"",
    ""OnEntitySaved(BaseNetworkable,BaseNetworkable.SaveInfo)"",
    ""OnEntitySnapshot(BaseNetworkable,Network.Connection)"",
    ""OnEntitySpawned(BaseNetworkable)"",
    ""OnEntityStabilityCheck(StabilityEntity)"",
    ""OnEntityTakeDamage(BaseCombatEntity,HitInfo)"",
    ""OnEntityTakeDamage(BasePlayer,HitInfo)"",
    ""OnEntityTakeDamage(ResourceEntity,HitInfo)"",
    ""OnEntityVisibilityCheck(BaseEntity,BasePlayer,uint,string,float)"",
    ""OnEventCollectablePickup(BasePlayer,CollectableEasterEgg)"",
    ""OnEventTrigger(TriggeredEventPrefab)"",
    ""OnExcavatorGather(ExcavatorArm,Item)"",
    ""OnExcavatorMiningToggled(ExcavatorArm)"",
    ""OnExcavatorResourceSet(ExcavatorArm,string,BasePlayer)"",
    ""OnExcavatorSuppliesRequest(ExcavatorSignalComputer,BasePlayer)"",
    ""OnExcavatorSuppliesRequested(ExcavatorSignalComputer,BasePlayer,BaseEntity)"",
    ""OnExperimentEnd(Workbench)"",
    ""OnExperimentEnded(Workbench)"",
    ""OnExperimentStart(Workbench,BasePlayer)"",
    ""OnExperimentStarted(Workbench,BasePlayer)"",
    ""OnExplosiveDropped(BasePlayer,BaseEntity,ThrownWeapon)"",
    ""OnExplosiveDud(DudTimedExplosive)"",
    ""OnExplosiveFuseSet(TimedExplosive,float)"",
    ""OnExplosiveThrown(BasePlayer,BaseEntity,ThrownWeapon)"",
    ""OnFeedbackReported(BasePlayer,string,string,Facepunch.Models.ReportType)"",
    ""OnFindBurnable(BaseOven)"",
    ""OnFindSpawnPoint(BasePlayer)"",
    ""OnFireBallDamage(FireBall,BaseCombatEntity,HitInfo)"",
    ""OnFireBallSpread(FireBall,BaseEntity)"",
    ""OnFireworkDamage(BaseFirework,HitInfo)"",
    ""OnFireworkDesignChange(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)"",
    ""OnFireworkDesignChanged(PatternFirework,ProtoBuf.PatternFirework.Design,BasePlayer)"",
    ""OnFireworkExhausted(BaseFirework)"",
    ""OnFireworkStarted(BaseFirework)"",
    ""OnFishCatch(Item,BaseFishingRod,BasePlayer)"",
    ""OnFishCaught(ItemDefinition,BaseFishingRod,BasePlayer)"",
    ""OnFishingRodCast(BaseFishingRod,BasePlayer,Item)"",
    ""OnFishingStopped(BaseFishingRod,BaseFishingRod.FailReason)"",
    ""OnFlameExplosion(FlameExplosive,UnityEngine.Collider)"",
    ""OnFlameThrowerBurn(FlameThrower,BaseEntity)"",
    ""OnFrame()"",
    ""OnFuelAmountCheck(EntityFuelSystem,Item)"",
    ""OnFuelCheck(EntityFuelSystem)"",
    ""OnFuelConsume(BaseOven,Item,ItemModBurnable)"",
    ""OnFuelConsumed(BaseOven,Item,ItemModBurnable)"",
    ""OnFuelItemCheck(EntityFuelSystem,StorageContainer)"",
    ""OnGiveSoldItem(VendingMachine,Item,BasePlayer)"",
    ""OnGroupCreated(string)"",
    ""OnGroupCreated(string,string,int)"",
    ""OnGroupDeleted(string)"",
    ""OnGroupParentSet(string,string)"",
    ""OnGroupPermissionGranted(string,string)"",
    ""OnGroupPermissionRevoked(string,string)"",
    ""OnGroupRankSet(string,int)"",
    ""OnGroupTitleSet(string,string)"",
    ""OnGrowableGather(GrowableEntity,BasePlayer,bool)"",
    ""OnGrowableGathered(GrowableEntity,Item,BasePlayer)"",
    ""OnGrowableStateChange(GrowableEntity,PlantProperties.State)"",
    ""OnHammerHit(BasePlayer,HitInfo)"",
    ""OnHealingItemUse(MedicalTool,BasePlayer)"",
    ""OnHelicopterAttack(CH47HelicopterAIController,HitInfo)"",
    ""OnHelicopterDropCrate(CH47HelicopterAIController)"",
    ""OnHelicopterDropDoorOpen(CH47HelicopterAIController)"",
    ""OnHelicopterOutOfCrates(CH47HelicopterAIController)"",
    ""OnHelicopterRetire(PatrolHelicopterAI)"",
    ""OnHelicopterStrafeEnter(PatrolHelicopterAI,UnityEngine.Vector3,BasePlayer)"",
    ""OnHelicopterTarget(HelicopterTurret,BaseCombatEntity)"",
    ""OnHorseHitch(RidableHorse,HitchTrough.HitchSpot)"",
    ""OnHorseLead(BaseRidableAnimal,BasePlayer)"",
    ""OnHorseUnhitch(RidableHorse,HitchTrough.HitchSpot)"",
    ""OnHotAirBalloonToggle(HotAirBalloon,BasePlayer)"",
    ""OnHotAirBalloonToggled(HotAirBalloon,BasePlayer)"",
    ""OnHuntEventEnd(EggHuntEvent)"",
    ""OnHuntEventStart(EggHuntEvent)"",
    ""OnIORefCleared(IOEntity.IORef,IOEntity)"",
    ""OnIngredientsCollect(ItemCrafter,ItemBlueprint,ItemCraftTask,int,BasePlayer)"",
    ""OnInputUpdate(IOEntity,int,int)"",
    ""OnInterferenceOthersUpdate(AutoTurret)"",
    ""OnInterferenceUpdate(AutoTurret)"",
    ""OnInventoryAmmoFind(PlayerInventory,System.Collections.Generic.List<Item>,Rust.AmmoTypes)"",
    ""OnInventoryAmmoItemFind(PlayerInventory,ItemDefinition)"",
    ""OnInventoryAmmoItemFind(PlayerInventory,Rust.AmmoTypes)"",
    ""OnInventoryItemFind(PlayerInventory,int)"",
    ""OnInventoryItemsCount(PlayerInventory,int)"",
    ""OnInventoryItemsFind(PlayerInventory,int)"",
    ""OnInventoryItemsTake(PlayerInventory,System.Collections.Generic.List<Item>,int,int)"",
    ""OnInventoryNetworkUpdate(PlayerInventory,ItemContainer,ProtoBuf.UpdateItemContainer,PlayerInventory.Type,PlayerInventory.NetworkInventoryMode)"",
    ""OnItemAction(Item,string,BasePlayer)"",
    ""OnItemAddedToContainer(ItemContainer,Item)"",
    ""OnItemCraft(IndustrialCrafter,ItemBlueprint)"",
    ""OnItemCraft(ItemCraftTask,BasePlayer,Item)"",
    ""OnItemCraftCancelled(ItemCraftTask,ItemCrafter)"",
    ""OnItemCraftFinished(ItemCraftTask,Item,ItemCrafter)"",
    ""OnItemDeployed(Deployer,BaseEntity,BaseEntity)"",
    ""OnItemDeployed(Deployer,ItemModDeployable,BaseEntity)"",
    ""OnItemDespawn(Item)"",
    ""OnItemDropped(Item,BaseEntity)"",
    ""OnItemFilter(Item,StorageContainer,int)"",
    ""OnItemLock(Item)"",
    ""OnItemPainted(PaintedItemStorageEntity,Item,BasePlayer,byte[])"",
    ""OnItemPickup(Item,BasePlayer)"",
    ""OnItemRecycle(Item,Recycler)"",
    ""OnItemRecycleAmount(Item,int,Recycler)"",
    ""OnItemRefill(Item,BasePlayer)"",
    ""OnItemRemove(Item)"",
    ""OnItemRemovedFromContainer(ItemContainer,Item)"",
    ""OnItemRepair(BasePlayer,Item)"",
    ""OnItemResearch(ResearchTable,Item,BasePlayer)"",
    ""OnItemResearched(ResearchTable,int)"",
    ""OnItemSkinChange(int,Item,RepairBench,BasePlayer)"",
    ""OnItemSplit(Item,int)"",
    ""OnItemStacked(Item,Item,ItemContainer)"",
    ""OnItemStacked(Item,Item,ItemContainer,int)"",
    ""OnItemSubmit(Item,Mailbox,BasePlayer)"",
    ""OnItemUnlock(Item)"",
    ""OnItemUnwrap(Item,BasePlayer,ItemModUnwrap)"",
    ""OnItemUpgrade(Item,Item,BasePlayer)"",
    ""OnItemUse(Item,int)"",
    ""OnLiftUse(Lift,BasePlayer)"",
    ""OnLiftUse(ProceduralLift,BasePlayer)"",
    ""OnLiquidVesselFill(BaseLiquidVessel,BasePlayer,LiquidContainer)"",
    ""OnLiquidWeaponFired(LiquidWeapon,BasePlayer)"",
    ""OnLiquidWeaponFiringStopped(LiquidWeapon)"",
    ""OnLockRemove(ModularCar,BasePlayer)"",
    ""OnLockerSwap(Locker,int,BasePlayer)"",
    ""OnLootEntity(BasePlayer,BaseEntity)"",
    ""OnLootEntityEnd(BasePlayer,ContainerIOEntity)"",
    ""OnLootEntityEnd(BasePlayer,DroppedItemContainer)"",
    ""OnLootEntityEnd(BasePlayer,ItemBasedFlowRestrictor)"",
    ""OnLootEntityEnd(BasePlayer,LootableCorpse)"",
    ""OnLootEntityEnd(BasePlayer,StorageContainer)"",
    ""OnLootItem(BasePlayer,Item)"",
    ""OnLootNetworkUpdate(PlayerLoot)"",
    ""OnLootPlayer(BasePlayer,BasePlayer)"",
    ""OnLootSpawn(LootContainer)"",
    ""OnLoseCondition(object[])"",
    ""OnMagazineReload(BaseProjectile,IAmmoContainer,BasePlayer)"",
    ""OnMapImageUpdated()"",
    ""OnMapMarkerAdd(BasePlayer,ProtoBuf.MapNote)"",
    ""OnMapMarkerAdded(BasePlayer,ProtoBuf.MapNote)"",
    ""OnMapMarkerRemove(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>,int)"",
    ""OnMapMarkersClear(BasePlayer,System.Collections.Generic.List<ProtoBuf.MapNote>)"",
    ""OnMapMarkersCleared(BasePlayer)"",
    ""OnMaxStackable(Item)"",
    ""OnMeleeAttack(BasePlayer,HitInfo)"",
    ""OnMeleeThrown(BasePlayer,Item)"",
    ""OnMessagePlayer(string,BasePlayer)"",
    ""OnMessagePlayer(string,BasePlayer,ulong)"",
    ""OnMetalDetectorFlagRequest(BaseMetalDetector,UnityEngine.Vector3,BasePlayer)"",
    ""OnMissionAssigned(BaseMission,IMissionProvider,BasePlayer)"",
    ""OnMissionFailed(BaseMission,BaseMission.MissionInstance,BasePlayer,BaseMission.MissionFailReason)"",
    ""OnMissionStart(BaseMission,BaseMission.MissionInstance,BasePlayer)"",
    ""OnMissionStarted(BaseMission,BaseMission.MissionInstance,BasePlayer)"",
    ""OnMissionSucceeded(BaseMission,BaseMission.MissionInstance,BasePlayer)"",
    ""OnMixingTableToggle(MixingTable,BasePlayer)"",
    ""OnMlrsFire(MLRS,BasePlayer)"",
    ""OnMlrsFired(MLRS,BasePlayer)"",
    ""OnMlrsFiringEnded(MLRS)"",
    ""OnMlrsRocketFired(MLRS,ServerProjectile)"",
    ""OnMlrsTarget(MLRS,UnityEngine.Vector3,BasePlayer)"",
    ""OnMlrsTargetSet(MLRS,UnityEngine.Vector3,BasePlayer)"",
    ""OnNearbyTurretsScan(AutoTurret,System.Collections.Generic.List<AutoTurret>,bool)"",
    ""OnNetworkGroupEntered(BaseNetworkable,Network.Visibility.Group)"",
    ""OnNetworkGroupLeft(BaseNetworkable,Network.Visibility.Group)"",
    ""OnNetworkSubscriptionsGather(NetworkVisibilityGrid,Network.Visibility.Group,System.Collections.Generic.List<Network.Visibility.Group>,int)"",
    ""OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,System.Collections.Generic.List<Network.Visibility.Group>)"",
    ""OnNetworkSubscriptionsUpdate(Network.Networkable,System.Collections.Generic.List<Network.Visibility.Group>,unknown)"",
    ""OnNoGoZoneAdded(PatrolHelicopterAI,PatrolHelicopterAI.DangerZone)"",
    ""OnNpcAlert(ScientistNPC)"",
    ""OnNpcAttack(BaseNpc,BaseEntity)"",
    ""OnNpcConversationEnded(NPCTalking,BasePlayer)"",
    ""OnNpcConversationRespond(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)"",
    ""OnNpcConversationResponded(NPCTalking,BasePlayer,ConversationData,ConversationData.ResponseNode)"",
    ""OnNpcConversationStart(NPCTalking,BasePlayer,ConversationData)"",
    ""OnNpcDuck(HumanNPC)"",
    ""OnNpcEquipWeapon(NPCPlayer,Item)"",
    ""OnNpcEquipWeapon(ScientistNPC,Item)"",
    ""OnNpcGiveSoldItem(NPCVendingMachine,Item,BasePlayer)"",
    ""OnNpcRadioChatter(ScientistNPC)"",
    ""OnNpcTarget(BaseEntity,BaseEntity)"",
    ""OnNpcTarget(BaseNpc,BaseEntity)"",
    ""OnNpcTarget(HumanNPC,BaseEntity)"",
    ""OnNpcTargetSense(BaseEntity,BaseEntity,AIBrainSenses)"",
    ""OnOpenVendingAdmin(VendingMachine,BasePlayer)"",
    ""OnOutputUpdate(IOEntity)"",
    ""OnOvenCook(BaseOven,Item)"",
    ""OnOvenCooked(BaseOven,Item,BaseEntity)"",
    ""OnOvenStart(BaseOven)"",
    ""OnOvenStarted(BaseOven)"",
    ""OnOvenTemperature(BaseOven,int)"",
    ""OnOvenToggle(BaseOven,BasePlayer)"",
    ""OnPatrolHelicopterKill(PatrolHelicopter,HitInfo)"",
    ""OnPatrolHelicopterTakeDamage(PatrolHelicopter,HitInfo)"",
    ""OnPayForPlacement(BasePlayer,Planner,Construction)"",
    ""OnPayForUpgrade(BasePlayer,BuildingBlock,ConstructionGrade)"",
    ""OnPermissionRegistered(string,Oxide.Core.Plugins.Plugin)"",
    ""OnPermissionRegistered(string,Plugin)"",
    ""OnPhoneAnswer(PhoneController,PhoneController)"",
    ""OnPhoneAnswered(PhoneController,PhoneController)"",
    ""OnPhoneCallStart(PhoneController,PhoneController,BasePlayer)"",
    ""OnPhoneCallStarted(PhoneController,PhoneController,BasePlayer)"",
    ""OnPhoneDial(PhoneController,PhoneController,BasePlayer)"",
    ""OnPhoneDialFail(PhoneController,Telephone.DialFailReason,BasePlayer)"",
    ""OnPhoneDialFailed(PhoneController,Telephone.DialFailReason,BasePlayer)"",
    ""OnPhoneDialTimedOut(PhoneController,PhoneController,BasePlayer)"",
    ""OnPhoneDialTimeout(PhoneController,PhoneController,BasePlayer)"",
    ""OnPhoneNameUpdate(PhoneController,string,BasePlayer)"",
    ""OnPhoneNameUpdated(PhoneController,string,BasePlayer)"",
    ""OnPhotoCapture(PhotoEntity,Item,BasePlayer,byte[])"",
    ""OnPhotoCaptured(PhotoEntity,Item,BasePlayer,byte[])"",
    ""OnPlanterBoxFertilize(PlanterBox)"",
    ""OnPlayerAddModifiers(BasePlayer,Item,ItemModConsumable)"",
    ""OnPlayerAssist(BasePlayer,BasePlayer)"",
    ""OnPlayerAttack(BasePlayer,HitInfo)"",
    ""OnPlayerBanned(Network.Connection,string)"",
    ""OnPlayerBanned(string,ulong,string,string,long)"",
    ""OnPlayerChat(BasePlayer,string,ConVar.Chat.ChatChannel)"",
    ""OnPlayerColliderEnable(BasePlayer,UnityEngine.CapsuleCollider)"",
    ""OnPlayerCommand(BasePlayer,string,string[])"",
    ""OnPlayerConnected(BasePlayer)"",
    ""OnPlayerCorpseSpawn(BasePlayer)"",
    ""OnPlayerCorpseSpawned(BasePlayer,PlayerCorpse)"",
    ""OnPlayerDeath(BasePlayer,HitInfo)"",
    ""OnPlayerDig(BasePlayer,BaseDiggableEntity)"",
    ""OnPlayerDisconnected(BasePlayer,string)"",
    ""OnPlayerDismountFailed(BasePlayer,BaseMountable)"",
    ""OnPlayerDrink(BasePlayer,LiquidContainer)"",
    ""OnPlayerDropActiveItem(BasePlayer,Item)"",
    ""OnPlayerHandcuff(BasePlayer,BasePlayer)"",
    ""OnPlayerHandcuffed(BasePlayer,BasePlayer)"",
    ""OnPlayerHealthChange(BasePlayer,float,float)"",
    ""OnPlayerInput(BasePlayer,InputState)"",
    ""OnPlayerKeepAlive(BasePlayer,BasePlayer)"",
    ""OnPlayerKicked(BasePlayer,string,bool)"",
    ""OnPlayerKicked(Network.Connection,string)"",
    ""OnPlayerLand(BasePlayer,float)"",
    ""OnPlayerLanded(BasePlayer,float)"",
    ""OnPlayerLanguageChanged(BasePlayer,string)"",
    ""OnPlayerLanguageChanged(Oxide.Core.Libraries.Covalence.IPlayer,string)"",
    ""OnPlayerLootEnd(PlayerLoot)"",
    ""OnPlayerMarkersSend(BasePlayer,ProtoBuf.MapNoteList)"",
    ""OnPlayerMetabolize(PlayerMetabolism,BaseCombatEntity,float)"",
    ""OnPlayerOfflineChat(ulong,string,string,ConVar.Chat.ChatChannel)"",
    ""OnPlayerPingsSend(BasePlayer,ProtoBuf.MapNoteList)"",
    ""OnPlayerPveDamage(BaseEntity,HitInfo,BuildingBlock)"",
    ""OnPlayerRecover(BasePlayer)"",
    ""OnPlayerRecovered(BasePlayer)"",
    ""OnPlayerReported(BasePlayer,string,string,string,string,string)"",
    ""OnPlayerRespawn(BasePlayer,BasePlayer.SpawnPoint)"",
    ""OnPlayerRespawn(BasePlayer,SleepingBag)"",
    ""OnPlayerRespawned(BasePlayer)"",
    ""OnPlayerRevive(BasePlayer,BasePlayer)"",
    ""OnPlayerSetInfo(Network.Connection,string,string)"",
    ""OnPlayerSleep(BasePlayer)"",
    ""OnPlayerSleepEnd(BasePlayer)"",
    ""OnPlayerSleepEnded(BasePlayer)"",
    ""OnPlayerSpawn(BasePlayer,Network.Connection)"",
    ""OnPlayerSpectate(BasePlayer,string)"",
    ""OnPlayerSpectateEnd(BasePlayer,string)"",
    ""OnPlayerStudyBlueprint(BasePlayer,Item)"",
    ""OnPlayerTick(BasePlayer,PlayerTick,bool)"",
    ""OnPlayerUnbanned(string,ulong,string)"",
    ""OnPlayerViolation(BasePlayer,AntiHackType,float)"",
    ""OnPlayerVoice(BasePlayer,byte[])"",
    ""OnPlayerWantsDismount(BasePlayer,BaseMountable)"",
    ""OnPlayerWantsMount(BasePlayer,BaseMountable)"",
    ""OnPlayerWound(BasePlayer,HitInfo)"",
    ""OnPluginLoaded(Plugin)"",
    ""OnPluginUnloaded(Plugin)"",
    ""OnPortalUse(BasePlayer,BasePortal)"",
    ""OnPortalUsed(BasePlayer,BasePortal)"",
    ""OnProjectileRicochet(BasePlayer,ProtoBuf.PlayerProjectileRicochet)"",
    ""OnQuarryConsumeFuel(MiningQuarry,Item)"",
    ""OnQuarryGather(MiningQuarry,Item)"",
    ""OnQuarryToggle(MiningQuarry,BasePlayer)"",
    ""OnQuarryToggled(MiningQuarry,BasePlayer)"",
    ""OnQueueCycle(int)"",
    ""OnQueueMessage(Network.Connection,int)"",
    ""OnRackedWeaponLoad(Item,ItemDefinition,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponLoaded(Item,ItemDefinition,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponMount(Item,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponMounted(Item,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponSwap(Item,WeaponRackSlot,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponSwapped(Item,WeaponRackSlot,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponTake(Item,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponTaken(Item,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponUnload(Item,BasePlayer,WeaponRack)"",
    ""OnRackedWeaponUnloaded(Item,BasePlayer,WeaponRack)"",
    ""OnRandomItemAward(RandomItemDispenser,RandomItemDispenser.RandomItemChance,BasePlayer,UnityEngine.Vector3)"",
    ""OnRconCommand(System.Net.IPAddress,string,string[])"",
    ""OnRconCommand(System.Net.IPEndPoint,string,string[])"",
    ""OnRconConnection(System.Net.IPAddress)"",
    ""OnRconMessage(System.Net.IPAddress,Oxide.Core.RemoteConsole.RemoteMessage)"",
    ""OnReactiveTargetReset(ReactiveTarget)"",
    ""OnRecyclerToggle(Recycler,BasePlayer)"",
    ""OnRefreshVendingStock(VendingMachine,ItemDefinition)"",
    ""OnRemoteIdentifierUpdate(PoweredRemoteControlEntity,string)"",
    ""OnRemoveDying(GrowableEntity,BasePlayer)"",
    ""OnResearchCostDetermine(Item)"",
    ""OnResearchCostDetermine(ItemDefinition)"",
    ""OnResourceDepositCreated(ResourceDepositManager.ResourceDeposit)"",
    ""OnRespawnInformationGiven(BasePlayer,System.Collections.Generic.List<ProtoBuf.RespawnInformation.SpawnOptions>)"",
    ""OnRfBroadcasterAdd(IRFObject,int)"",
    ""OnRfBroadcasterAdded(IRFObject,int)"",
    ""OnRfBroadcasterRemove(IRFObject,int)"",
    ""OnRfBroadcasterRemoved(IRFObject,int)"",
    ""OnRfFrequencyChange(Detonator,int,BasePlayer)"",
    ""OnRfFrequencyChange(PagerEntity,int,BasePlayer)"",
    ""OnRfFrequencyChange(RFBroadcaster,int,BasePlayer)"",
    ""OnRfFrequencyChange(RFReceiver,int,BasePlayer)"",
    ""OnRfFrequencyChanged(Detonator,int,BasePlayer)"",
    ""OnRfFrequencyChanged(PagerEntity,int,BasePlayer)"",
    ""OnRfFrequencyChanged(RFBroadcaster,int,BasePlayer)"",
    ""OnRfFrequencyChanged(RFReceiver,int,BasePlayer)"",
    ""OnRfListenerAdd(IRFObject,int)"",
    ""OnRfListenerAdded(IRFObject,int)"",
    ""OnRfListenerRemove(IRFObject,int)"",
    ""OnRfListenerRemoved(IRFObject,int)"",
    ""OnRidableAnimalClaim(BaseRidableAnimal,BasePlayer,Item)"",
    ""OnRidableAnimalClaimed(BaseRidableAnimal,BasePlayer)"",
    ""OnRocketLaunched(BasePlayer,BaseEntity)"",
    ""OnRotateVendingMachine(VendingMachine,BasePlayer)"",
    ""OnRunPlayerMetabolism(PlayerMetabolism,BaseCombatEntity,float)"",
    ""OnSamSiteModeToggle(SamSite,BasePlayer,bool)"",
    ""OnSamSiteTarget(SamSite,SamSite.ISamSiteTarget)"",
    ""OnSamSiteTargetScan(SamSite,System.Collections.Generic.List<SamSite.ISamSiteTarget>)"",
    ""OnScientistInitialized(BradleyAPC,ScientistNPC,UnityEngine.Vector3)"",
    ""OnScientistRecalled(BradleyAPC,ScientistNPC)"",
    ""OnSendCommand(Network.Connection,string,object[])"",
    ""OnSendCommand(System.Collections.Generic.List<Network.Connection>,string,object[])"",
    ""OnSendModelState(BasePlayer)"",
    ""OnSensorDetect(HBHFSensor,BasePlayer)"",
    ""OnServerCommand(ConsoleSystem.Arg)"",
    ""OnServerCommand(string,string[])"",
    ""OnServerInformationUpdated()"",
    ""OnServerInitialize()"",
    ""OnServerInitialized(bool)"",
    ""OnServerMessage(string,string,string,ulong)"",
    ""OnServerRestart(string,int)"",
    ""OnServerRestartInterrupt()"",
    ""OnServerSave()"",
    ""OnServerShutdown()"",
    ""OnServerUserRemove(ulong)"",
    ""OnServerUserSet(ulong,ServerUsers.UserGroup,string,string,long)"",
    ""OnShopAcceptClick(ShopFront,BasePlayer)"",
    ""OnShopCancelClick(ShopFront,BasePlayer)"",
    ""OnShopCompleteTrade(ShopFront)"",
    ""OnSignContentCopied(SignContent,ISignage,IUGCBrowserEntity)"",
    ""OnSignLocked(PhotoFrame,BasePlayer)"",
    ""OnSignLocked(Signage,BasePlayer)"",
    ""OnSignUpdated(CarvablePumpkin,BasePlayer)"",
    ""OnSignUpdated(PhotoFrame,BasePlayer)"",
    ""OnSignUpdated(Signage,BasePlayer,int)"",
    ""OnSignalBroadcast(BaseEntity)"",
    ""OnSignalBroadcast(BaseEntity,Network.Connection)"",
    ""OnSleepingBagDestroy(SleepingBag,ulong)"",
    ""OnSleepingBagDestroyed(SleepingBag,ulong)"",
    ""OnSleepingBagValidCheck(SleepingBag,ulong,bool)"",
    ""OnSolarPanelSunUpdate(SolarPanel,int)"",
    ""OnSpinWheel(BasePlayer,SpinnerWheel)"",
    ""OnSprayCreate(SprayCan,UnityEngine.Vector3,UnityEngine.Quaternion)"",
    ""OnSprayRemove(SprayCanSpray,BasePlayer)"",
    ""OnSprinklerSplashed(Sprinkler)"",
    ""OnStashExposed(StashContainer,BasePlayer)"",
    ""OnStashHidden(StashContainer,BasePlayer)"",
    ""OnStashOcclude(StashContainer)"",
    ""OnStructureDemolish(StabilityEntity,BasePlayer,bool)"",
    ""OnStructureRepair(BaseCombatEntity,BasePlayer)"",
    ""OnStructureRotate(BuildingBlock,BasePlayer)"",
    ""OnStructureUpgrade(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)"",
    ""OnStructureUpgraded(BuildingBlock,BasePlayer,BuildingGrade.Enum,ulong)"",
    ""OnSupplyDropDropped(BaseEntity,CargoPlane)"",
    ""OnSupplyDropLanded(SupplyDrop)"",
    ""OnSurveyGather(SurveyCharge,Item)"",
    ""OnSwitchToggle(ElectricSwitch,BasePlayer)"",
    ""OnSwitchToggle(FuelGenerator,BasePlayer)"",
    ""OnSwitchToggle(IndustrialConveyor,BasePlayer)"",
    ""OnSwitchToggled(ElectricSwitch,BasePlayer)"",
    ""OnSwitchToggled(FuelGenerator,BasePlayer)"",
    ""OnSwitchToggled(IndustrialConveyor,BasePlayer)"",
    ""OnTakeCurrencyItem(NPCVendingMachine,Item)"",
    ""OnTakeCurrencyItem(VendingMachine,Item)"",
    ""OnTeamAcceptInvite(RelationshipManager.PlayerTeam,BasePlayer)"",
    ""OnTeamCreate(BasePlayer)"",
    ""OnTeamCreated(BasePlayer,RelationshipManager.PlayerTeam)"",
    ""OnTeamDisband(RelationshipManager.PlayerTeam)"",
    ""OnTeamDisbanded(RelationshipManager.PlayerTeam)"",
    ""OnTeamInvite(BasePlayer,BasePlayer)"",
    ""OnTeamKick(RelationshipManager.PlayerTeam,BasePlayer,ulong)"",
    ""OnTeamLeave(RelationshipManager.PlayerTeam,BasePlayer)"",
    ""OnTeamPromote(RelationshipManager.PlayerTeam,BasePlayer)"",
    ""OnTeamRejectInvite(BasePlayer,RelationshipManager.PlayerTeam)"",
    ""OnTeamUpdate(ulong,ulong,BasePlayer)"",
    ""OnTeamUpdated(ulong,ProtoBuf.PlayerTeam,BasePlayer)"",
    ""OnTechTreeNodeUnlock(Workbench,TechTreeData.NodeInstance,BasePlayer)"",
    ""OnTechTreeNodeUnlocked(Workbench,TechTreeData.NodeInstance,BasePlayer)"",
    ""OnTerrainCreate(TerrainGenerator)"",
    ""OnTerrainInitialized()"",
    ""OnThreatLevelUpdate(BasePlayer)"",
    ""OnTick()"",
    ""OnTimedExplosiveExplode(TimedExplosive,UnityEngine.Vector3)"",
    ""OnToggleVendingBroadcast(VendingMachine,BasePlayer)"",
    ""OnTrainCarUncouple(TrainCar,BasePlayer)"",
    ""OnTrapArm(BearTrap,BasePlayer)"",
    ""OnTrapDisarm(Landmine,BasePlayer)"",
    ""OnTrapSnapped(BaseTrapTrigger,UnityEngine.GameObject,UnityEngine.Collider)"",
    ""OnTrapTrigger(BearTrap,UnityEngine.GameObject)"",
    ""OnTrapTrigger(Landmine,UnityEngine.GameObject)"",
    ""OnTreeMarkerHit(TreeEntity,HitInfo)"",
    ""OnTurretAssign(AutoTurret,ulong,BasePlayer)"",
    ""OnTurretAssigned(AutoTurret,ulong,BasePlayer)"",
    ""OnTurretAuthorize(AutoTurret,BasePlayer)"",
    ""OnTurretClearList(AutoTurret,BasePlayer)"",
    ""OnTurretDeauthorize(AutoTurret,BasePlayer)"",
    ""OnTurretIdentifierSet(AutoTurret,BasePlayer,string)"",
    ""OnTurretModeToggle(AutoTurret,BasePlayer)"",
    ""OnTurretRotate(AutoTurret,BasePlayer)"",
    ""OnTurretShutdown(AutoTurret)"",
    ""OnTurretStartup(AutoTurret)"",
    ""OnTurretTarget(AutoTurret,BaseCombatEntity)"",
    ""OnTurretToggle(AutoTurret)"",
    ""OnUserApprove(Network.Connection)"",
    ""OnUserApproved(string,string,string)"",
    ""OnUserBanned(string,string,string,string)"",
    ""OnUserBanned(string,string,string,string,long)"",
    ""OnUserChat(Oxide.Core.Libraries.Covalence.IPlayer,string)"",
    ""OnUserCommand(Oxide.Core.Libraries.Covalence.IPlayer,string,string[])"",
    ""OnUserConnected(IPlayer)"",
    ""OnUserConnected(Oxide.Core.Libraries.Covalence.IPlayer)"",
    ""OnUserDisconnected(IPlayer)"",
    ""OnUserDisconnected(Oxide.Core.Libraries.Covalence.IPlayer,string)"",
    ""OnUserGroupAdded(string,string)"",
    ""OnUserGroupRemoved(string,string)"",
    ""OnUserKicked(IPlayer,string)"",
    ""OnUserKicked(Oxide.Core.Libraries.Covalence.IPlayer,string)"",
    ""OnUserNameUpdated(string,string,string)"",
    ""OnUserPermissionGranted(string,string)"",
    ""OnUserPermissionRevoked(string,string)"",
    ""OnUserRespawn(IPlayer)"",
    ""OnUserRespawn(Oxide.Core.Libraries.Covalence.IPlayer)"",
    ""OnUserRespawned(IPlayer)"",
    ""OnUserRespawned(Oxide.Core.Libraries.Covalence.IPlayer)"",
    ""OnUserUnbanned(string,string,string)"",
    ""OnVehicleHornPressed(VehicleModuleSeating,BasePlayer)"",
    ""OnVehicleLockRequest(ModularCarGarage,BasePlayer,string)"",
    ""OnVehicleLockableCheck(ModularCarCodeLock)"",
    ""OnVehicleModuleDeselected(ModularCarGarage,BasePlayer)"",
    ""OnVehicleModuleMove(BaseVehicleModule,BaseModularVehicle,BasePlayer)"",
    ""OnVehicleModuleSelect(Item,ModularCarGarage,BasePlayer)"",
    ""OnVehicleModuleSelected(Item,ModularCarGarage,BasePlayer)"",
    ""OnVehicleModulesAssign(ModularCar,Rust.Modular.ItemModVehicleModule[])"",
    ""OnVehicleModulesAssigned(ModularCar,Rust.Modular.ItemModVehicleModule[])"",
    ""OnVehiclePush(BaseVehicle,BasePlayer)"",
    ""OnVendingShopOpen(InvisibleVendingMachine,BasePlayer)"",
    ""OnVendingShopOpen(NPCVendingMachine,BasePlayer)"",
    ""OnVendingShopOpen(VendingMachine,BasePlayer)"",
    ""OnVendingShopOpened(InvisibleVendingMachine,BasePlayer)"",
    ""OnVendingShopOpened(NPCVendingMachine,BasePlayer)"",
    ""OnVendingShopOpened(VendingMachine,BasePlayer)"",
    ""OnVendingShopRename(VendingMachine,string,BasePlayer)"",
    ""OnVendingTransaction(VendingMachine,BasePlayer,int,int,ItemContainer)"",
    ""OnWallpaperRemove(BuildingBlock,int)"",
    ""OnWallpaperSet(BuildingBlock,ulong,int)"",
    ""OnWaterCollect(WaterCatcher)"",
    ""OnWaterCollect(WaterPump,ItemDefinition)"",
    ""OnWaterPurified(WaterPurifier,float)"",
    ""OnWaterPurify(WaterPurifier,float)"",
    ""OnWeaponFired(BaseProjectile,BasePlayer,ItemModProjectile,ProtoBuf.ProjectileShoot)"",
    ""OnWeaponModChange(BaseProjectile,BasePlayer)"",
    ""OnWeaponReload(BaseProjectile,BasePlayer)"",
    ""OnWildlifeTrap(SurvivalFishTrap,ItemDefinition)"",
    ""OnWildlifeTrap(WildlifeTrap,TrappableWildlife)"",
    ""OnWindmillUpdate(ElectricWindmill)"",
    ""OnWindmillUpdated(ElectricWindmill)"",
    ""OnWireClear(BasePlayer,IOEntity,int,IOEntity,bool)"",
    ""OnWireConnect(BasePlayer,IOEntity,int,IOEntity,int,System.Collections.Generic.List<UnityEngine.Vector3>,System.Collections.Generic.List<float>)"",
    ""OnWorldPrefabSpawned(UnityEngine.GameObject,string)"",
    ""OnWorldProjectileCreate(HitInfo,Item)"",
    ""OnXmasGiftsDistribute(XMasRefill,BasePlayer)"",
    ""OnXmasLootDistribute(XMasRefill)"",
    ""OnXmasStockingFill(Stocking)"",
    ""Unload()"",
    ""CanUserLogin(string,string,string)"",
    ""OnUserChat(IPlayer,string)"",
    ""OnUserCommand(IPlayer,string,string[])"",
    ""LoadDefaultConfig()"",
    ""LoadDefaultMessages()"",
    ""RustEdit_OnMapDataProcessed()"",
    ""RustEdit_NPCSpawned(BasePlayer)"",
    ""RustEdit_APCSpawned(BradleyAPC)"",
    ""OnNewSave(string)""
  ]
}";
    }
}   